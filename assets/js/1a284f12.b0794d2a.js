"use strict";(self.webpackChunkconsulting_website=self.webpackChunkconsulting_website||[]).push([[8703],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>h});var a=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,a,n=function(e,t){if(null==e)return{};var o,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)o=i[a],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)o=i[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(o),h=n,m=d["".concat(s,".").concat(h)]||d[h]||c[h]||i;return o?a.createElement(m,r(r({ref:t},p),{},{components:o})):a.createElement(m,r({ref:t},p))}));function h(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=o.length,r=new Array(i);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,r[1]=l;for(var u=2;u<i;u++)r[u]=o[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,o)}d.displayName="MDXCreateElement"},7891:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var a=o(7462),n=(o(7294),o(3905));const i={title:"What I Expect of Developers",authors:"akecskes",tags:["software development","project management","communication","work style"]},r="What I Expect of Developers",l={permalink:"/blog/2023/08/31/developer-expectations",source:"@site/blog/2023-08-31-developer-expectations.md",title:"What I Expect of Developers",description:"I\u2019ve written this document because, over the past few years, I have encountered one too many situations with developers not living up to their own expectations.",date:"2023-08-31T00:00:00.000Z",formattedDate:"August 31, 2023",tags:[{label:"software development",permalink:"/blog/tags/software-development"},{label:"project management",permalink:"/blog/tags/project-management"},{label:"communication",permalink:"/blog/tags/communication"},{label:"work style",permalink:"/blog/tags/work-style"}],readingTime:10.44,hasTruncateMarker:!0,authors:[{name:"Adam Kecskes",title:"Organizational and Operational Optimizer",url:"https://kecskes.net",imageURL:"https://www.gravatar.com/avatar/a4eec2622d18594aea04310ae3ec577c",key:"akecskes"}],frontMatter:{title:"What I Expect of Developers",authors:"akecskes",tags:["software development","project management","communication","work style"]},prevItem:{title:"Working with Adam as PM",permalink:"/blog/2023/09/01/working-with-me"},nextItem:{title:"An Brief on Process Experience",permalink:"/blog/business/intro-to-process-experience"}},s={authorsImageUrls:[void 0]},u=[{value:"Too much lost time",id:"too-much-lost-time",level:3},{value:"To the real seniors",id:"to-the-real-seniors",level:3},{value:"Keeping it simple",id:"keeping-it-simple",level:3},{value:"Communications",id:"communications",level:2},{value:"Software Development",id:"software-development",level:2},{value:"Basics",id:"basics",level:3},{value:"Intermediate",id:"intermediate",level:3},{value:"Advanced",id:"advanced",level:3},{value:"Final Expectations",id:"final-expectations",level:2},{value:"Juniors",id:"juniors",level:3},{value:"Contributors",id:"contributors",level:3},{value:"Leads and specialists",id:"leads-and-specialists",level:3},{value:"Living up to YOUR own expectations",id:"living-up-to-your-own-expectations",level:3}],p={toc:u};function c(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"I\u2019ve written this document because, over the past few years, I have encountered one too many situations with developers not living up to their own expectations."),(0,n.kt)("p",null,"As a developer myself with a couple of decades of experience under my belt, I\u2019ve seen a lot of examples of how code can go wrong and how painful it can be to fix them when the PM comes along with a new feature request or important bug fix. As a project manager I\u2019ve had to deal with the consequences of those poor coding decisions, spending an inordinate amount of time and social and political capital trying to smooth things over when a client gets upset because we went over time and budget."),(0,n.kt)("p",null,"You can read this as a Google Doc ",(0,n.kt)("a",{parentName:"p",href:"https://docs.google.com/document/d/1Zk_1ZYAQmJP4XaTYYlvV8LS4hwGvyv2C96C_Vs7wD7c/edit?usp=sharing"},"here"),"."),(0,n.kt)("h3",{id:"too-much-lost-time"},"Too much lost time"),(0,n.kt)("p",null,"And why do a lot of projects go over time and budget? Because, inevitably, as I have found, the software was written at a junior level, despite claims by those same developers as being \u201csenior\u201d or \u201cstrong intermediate\u201d or whatever title gives them a boost to their ego or salary."),(0,n.kt)("p",null,"Can you tell I\u2019ve done all that? Point is, you\u2019re probably not as senior (or even intermediate) as you think and the way you write code and interact with the project is a risk factor I\u2019d like to greatly reduce."),(0,n.kt)("h3",{id:"to-the-real-seniors"},"To the real seniors"),(0,n.kt)("p",null,"If you truly are \u201csenior\u201d (which is a term I don\u2019t like to use, since it\u2019s bloated and ill-defined\u2026 let\u2019s say high-performing contributors instead), then you\u2019ll understand these problems. Hopefully, your team doesn\u2019t have these sorts of issues because they can rely on you to be their local mentor, improving their output under your careful watch."),(0,n.kt)("h3",{id:"keeping-it-simple"},"Keeping it simple"),(0,n.kt)("p",null,"I\u2019m not going over the nitty-gritty here. This document is about raising awareness of how I like to interact with developers. I would like to start with one definition that I expect everyone I work with to follow:"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"pro\xb7\u200bfes\xb7\u200bsion\xb7\u200bal"),(0,n.kt)("br",null),"\n",(0,n.kt)("em",{parentName:"p"},"adjective"),(0,n.kt)("br",null),"\nBehavior that exhibits the qualities of being trained or technically skilled; having the characteristic of being aware of the contextual backdrop as well as immediate and future needs of people, places, and systems and exhibiting courteousness, conscientiousness, and consistency in serving those needs.")),(0,n.kt)("p",null,"Okay, with that out of the way, let\u2019s start with the easy thing, getting communications right:"),(0,n.kt)("h2",{id:"communications"},"Communications"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"I\u2019d rather know about your concerns earlier, rather than later. If you\u2019re over your head, feel free to let me or the dev lead know what\u2019s up."),(0,n.kt)("li",{parentName:"ul"},"In Slack (or whatever instant messaging tool we\u2019re using), keep topics in the same thread, not in the different channels (way more on the topic of using IM ",(0,n.kt)("a",{parentName:"li",href:"https://kecskes.net/Truly%20Professional%20Instant%20Messaging%20(with%20Slack!).pdf"},"here"),")"),(0,n.kt)("li",{parentName:"ul"},"Tasks, issues, tickets \u2014 whatever we call them \u2014 aren\u2019t sourced in the IM tool; they\u2019re sourced in the PM tool (Jira, Monday, etc. ). So, don\u2019t update the status in the IM, update them in the PM tool. Less IM\u2019ing, more updating tasks."),(0,n.kt)("li",{parentName:"ul"},"Minimize your DMs to me or anyone else. If you have a question, regardless of how awkward you think it might be to ask, ask it to the development public channel. We\u2019re here to help you, not chastise you (and believe me, I\u2019ve made plenty of dumb mistakes in my time)."),(0,n.kt)("li",{parentName:"ul"},"If you\u2019re in front of the client or customer for any reason, always err on the side of caution. Don\u2019t spout out something unless you\u2019ve gotten previous approval from me or the lead (and that can occur if I or the lead are leading the conversation by example).")),(0,n.kt)("h2",{id:"software-development"},"Software Development"),(0,n.kt)("p",null," This section will generate a lot of debate, even from the high performers. The essence of what I\u2019m going to share boils down to two points:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Any code should be easy to read and easy to change for other developers on the team, not just yourself."),(0,n.kt)("li",{parentName:"ul"},"The client will change their mind. This is inevitable and can occur at any time. The code has to support this point by being fast to set up, reasonably flexible, easily configurable, nominally updatable, and ready to demonstrate at any time.")),(0,n.kt)("h3",{id:"basics"},"Basics"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Code should be DRY. This literally has been the biggest cause of most of my projects\u2019 problems over the past few years.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Don\u2019t copy and paste code; if you had to write it twice, there\u2019s a decent chance you\u2019ll have to write it a third time\u2026 or more."),(0,n.kt)("li",{parentName:"ul"},"Get out of the habit of copy-and-pasting because it\u2019s a crutch; you need to think outside the file."),(0,n.kt)("li",{parentName:"ul"},"At some point in a project, you\u2019ll spend more time hunting down errors in your cascading load of copy-and-paste, non-DRY code than you will writing new features or quickly fixing bugs. Just remove that risk entirely."),(0,n.kt)("li",{parentName:"ul"},"I go over the deeper consequences in this long-form document: ",(0,n.kt)("a",{parentName:"li",href:"https://docs.google.com/document/d/1DBTcmixSCl099-lpDCkitNlcGk8K0uFoNtgnhLPE4-Y/edit?usp=sharing"},"The Curse of Copy-and-Paste Code"),"."))),(0,n.kt)("li",{parentName:"ul"},"Don\u2019t ignore the details of the design document.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"It doesn\u2019t have to be pixel-perfect, but it has to be very close."),(0,n.kt)("li",{parentName:"ul"},"UI devs: Figma and other similar tools give you the CSS code, so use it."))),(0,n.kt)("li",{parentName:"ul"},"No warnings or errors for lint, the browser, interpreter, or compiler before committing/merging (without explanation)."),(0,n.kt)("li",{parentName:"ul"},"Use a code spelling check extension. You\u2019ll avoid a ton of basic mistakes and improve your debugging because you won\u2019t miss that one misspelled variable. "),(0,n.kt)("li",{parentName:"ul"},"No hard coded, \u201cmagic\u201d values.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Pull client/customer text out of the code and add it as a part of an I18N file, even if it\u2019s only for a single language."),(0,n.kt)("li",{parentName:"ul"},"Create config files for things like maximums, minimums, colors, and other things that the client might change their mind on."),(0,n.kt)("li",{parentName:"ul"},"Don\u2019t make these (or any) files monolithic."))),(0,n.kt)("li",{parentName:"ul"},"Files less than 200 lines (without a good reason for going higher)."),(0,n.kt)("li",{parentName:"ul"},"CSS is a programming language; treat it as such."),(0,n.kt)("li",{parentName:"ul"},"Idiomatic code is preferred; if you don\u2019t know a language\u2019s idioms, learn them."),(0,n.kt)("li",{parentName:"ul"},"No zombie code; no commented-out code. If you\u2019re not using it, don\u2019t crowd the file by leaving it in."),(0,n.kt)("li",{parentName:"ul"},"More files and folders are better than a single long file."),(0,n.kt)("li",{parentName:"ul"},"Standardize formatting; use Prettier (or the formatter of the team\u2019s choice)."),(0,n.kt)("li",{parentName:"ul"},"Keep ",(0,n.kt)("a",{parentName:"li",href:"https://www.digitalocean.com/community/conceptual-articles/s-o-l-i-d-the-first-five-principles-of-object-oriented-design"},"SOLID")," and ",(0,n.kt)("a",{parentName:"li",href:"https://dannorth.net/2022/02/10/cupid-for-joyful-coding/"},"CUPID")," design principles in mind when developing."),(0,n.kt)("li",{parentName:"ul"},"Be consistent in how you name things. Follow your team\u2019s general lead if you\u2019re not sure."),(0,n.kt)("li",{parentName:"ul"},"Be wary of deeply nested files or long files (usually the two are the same). Break files up into reusable component parts.")),(0,n.kt)("h3",{id:"intermediate"},"Intermediate"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Double-check the data. This is the second most painful point that I keep encountering on projects, where there\u2019s been a typo or a missed change in a data structure or the data itself."),(0,n.kt)("li",{parentName:"ul"},"Actually be as detail-oriented as you claim on your resume; look at the rest of the code and understand the impact of your code changes on the rest of the code, your teammates, and how it will show up to the client. "),(0,n.kt)("li",{parentName:"ul"},"Learn how to think in abstractions rather than in literals, i.e., figure out how to use generics if the language supports them."),(0,n.kt)("li",{parentName:"ul"},"Even if you don\u2019t write tests, at least think about how you would test your code, were you to write test code."),(0,n.kt)("li",{parentName:"ul"},"Follow the practice of limiting your deeply nested ",(0,n.kt)("inlineCode",{parentName:"li"},"if")," statements. Switches are just fancy ",(0,n.kt)("inlineCode",{parentName:"li"},"if")," statements, so consider why you\u2019re using them before you do. Likely there\u2019s a more functional way or a specific code pattern that will do the trick better."),(0,n.kt)("li",{parentName:"ul"},"Lots of ",(0,n.kt)("inlineCode",{parentName:"li"},"if")," statement code does not a good state machine make; use a proper library."),(0,n.kt)("li",{parentName:"ul"},"Learn your frameworks, tools, libraries, and packages. Leverage all of the amazing work other smart people have already done so you don\u2019t have to do the work yourself."),(0,n.kt)("li",{parentName:"ul"},"Type your code, e.g., use TypeScript and not JavaScript. I know types can be annoying, but they will save you a ton of time in the long run."),(0,n.kt)("li",{parentName:"ul"},"For TypeScript in particular:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Don\u2019t use the ",(0,n.kt)("inlineCode",{parentName:"li"},"any")," type. Do everything you can to avoid it."),(0,n.kt)("li",{parentName:"ul"},"Learn how to use interfaces, types, unions, intersections, and type narrowing. The rest will follow."))),(0,n.kt)("li",{parentName:"ul"},"Don\u2019t overuse the ",(0,n.kt)("inlineCode",{parentName:"li"},"?")," operator. Understand your data, rather than relying on the code as a catch-all for your ignorance.")),(0,n.kt)("h3",{id:"advanced"},"Advanced"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Learn good programming design patterns; there are a ton, but Proxy, Provider, Observer, and Factory are some good examples. Always be looking for patterns."),(0,n.kt)("li",{parentName:"ul"},"If you\u2019ve been doing procedural programming for a long time, learn functional programming. Most modern languages are multi-modal so you can practice any number of programming paradigms."),(0,n.kt)("li",{parentName:"ul"},"Avoid setting things to ",(0,n.kt)("inlineCode",{parentName:"li"},"null"),". Study Rust for the how, and look up the \u201cbillion dollar mistake\u201d for why."),(0,n.kt)("li",{parentName:"ul"},"Learn to use ",(0,n.kt)("inlineCode",{parentName:"li"},"git")," for more than just committing, pulling, and pushing. It\u2019s super-useful as a development tool in its own right. But for ",(0,n.kt)("inlineCode",{parentName:"li"},"git")," usage in general:"),(0,n.kt)("li",{parentName:"ul"},"Be conscientious of your commit messages; other people read them."),(0,n.kt)("li",{parentName:"ul"},"Commit small, commit often."),(0,n.kt)("li",{parentName:"ul"},"Set your CI/CD systems up so that issues are auto-closed when the merge happens so you don\u2019t have to remember to do it manually. It saves everyone a lot of time not asking, \u201cHey, did you really get to this?\u201d "),(0,n.kt)("li",{parentName:"ul"},"There\u2019s way more I could write on this topic; but other, better, developers have already done so. Go out and read books and Internet articles on coding best practices and then implement those practices. Teach others while you\u2019re at it. Experiment \u2014 Even feel free to experiment with new ideas in an ongoing project. As long as it\u2019s vetted by the team or the wider development community, it\u2019s probably better than the overly rudimentary copy-and-post code you\u2019ve been doing.")),(0,n.kt)("h2",{id:"final-expectations"},"Final Expectations"),(0,n.kt)("p",null,"Ultimately, regardless of your programming skill level, what I expect from developers is professionalism. No coder does development in true isolation; if you\u2019re on a paid project, you need to step up and make coding a profession, not a hobby. "),(0,n.kt)("h3",{id:"juniors"},"Juniors"),(0,n.kt)("p",null,"I expect junior developers to be constantly communicating their small accomplishments. I expect them to write trivial code; I expect them to be learning all the time. But I (or the dev lead) want to hear about what is being learned, almost daily."),(0,n.kt)("h3",{id:"contributors"},"Contributors"),(0,n.kt)("p",null,"For higher-performing contributors, I expect a high degree of autonomy, lateral thinking, and a holistic approach to development; that is, you don\u2019t have to think outside of the box, but you do have to think outside of the file. You should be making systems that make everyone\u2019s life easier. Ideally, you have these systems ready to go at the start of the project."),(0,n.kt)("p",null,"I also expect nearly daily updates, especially inside the task you\u2019re working on. You and I don\u2019t even have to talk about anything as long as I see that tasks are legitimately being updated with useful commentary and details. "),(0,n.kt)("h3",{id:"leads-and-specialists"},"Leads and specialists"),(0,n.kt)("p",null,"For the highest-performing developers, I expect you to be taking care of business. You\u2019re anticipating and resolving potential client needs without external guidance and ensuring that the code quality is flexible and free of defects. You\u2019re also making sure the junior developers aren\u2019t copy-and-pasting us into a corner we can\u2019t get out of."),(0,n.kt)("h3",{id:"living-up-to-your-own-expectations"},"Living up to YOUR own expectations"),(0,n.kt)("p",null,"What I\u2019ve been disappointed with over the past several years, is that folks don\u2019t seem to be living up to their own expectations. I\u2019ve had to have too many serious conversations with \u201cintermediate\u201d and \u201csenior\u201d developers where I pull up their code and show them how to fix their own code bases \u2014 and I\u2019m just the project manager. "),(0,n.kt)("p",null,"I want you to be better than that. I try to cultivate a no-blame space on my projects. We all make mistakes, and that\u2019s okay. What\u2019s not okay is writing code that causes a growing set of problems as more features are added. Code should become more stable as it ages, not less, but poor coding practices lead to buggy situations."),(0,n.kt)("p",null,"If you consider yourself to have moved beyond the realm of junior, then prove it. Write code that other developers find a pleasure to engage with. Even better, write code that works so well, that no one has to to engage it at all, except at the interfaces. "),(0,n.kt)("p",null,"Okay, that\u2019s enough. I\u2019m just the project manager with a lot of opinions. If you want to learn more about my perspective on things, check out:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.google.com/document/d/1IGglqNEzHWLYTV5JY5F6zZ-pKB6fYNWP7LSD49BmDv8/edit?usp=sharing"},"You\u2019re Not a Senior Developer")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.google.com/document/d/1Dgn6UXkyh9Pj1Qjh2QGhv8HaRe6SfQQjw3ab1TqzUv4/edit?usp=sharing"},"The Perpetual Junior Developer Trap"))))}c.isMDXComponent=!0}}]);